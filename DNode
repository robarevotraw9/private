class DNode:
    def __init__(self, data):
        self.data = data
        self.prev = None
        self.next = None

class DoublyLinkedList:
    def __init__(self):
        self.head = None
    
    def append(self, data):
        new_node = DNode(data)
        if not self.head:
            self.head = new_node
            return
        curr = self.head
        while curr.next:
            curr = curr.next
        curr.next = new_node
        new_node.prev = curr
    
    def display_forward(self):
        curr = self.head
        while curr:
            print(curr.data, end=" <-> ")
            curr = curr.next
        print("None")
    
    def display_backward(self):
        curr = self.head
        if not curr:
            return
        # 移动到尾部
        while curr.next:
            curr = curr.next
        while curr:
            print(curr.data, end=" <-> ")
            curr = curr.prev
        print("None")

# 测试示例
if __name__ == "__main__":
    dll = DoublyLinkedList()
    dll.append(1)
    dll.append(2)
    dll.append(3)
    print("正向遍历:")
    dll.display_forward()   # 输出：1 <-> 2 <-> 3 <-> None
    print("反向遍历:")
    dll.display_backward()  # 输出：3 <-> 2 <-> 1 <-> None
